{
  "swagger": "2.0",
  "info": {
    "description": "This is a small set of API endpoints that can be used for listing the names of Star Wars movies, along with their opening crawls and comment counts. Adding and listing anonymous comments for a movie, and getting the character list for a movie",
    "version": "1.0",
    "title": "Star Wars API",
    "contact": {
      "email": "ekohfranklin@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "tags": [{
    "name": "Star Wars",
    "description": "Api for listing Star Wars data"
  }],
  "host": "young-sierra-41795.herokuapp.com",
  "basePath": "/",
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "schemes": [
    "https"
  ],
  "paths": {
    "/comments": {
      "post": {
        "tags": ["comments"],
        "description": "Creates comments for a movie",
        "parameters": [{
          "name": "comments",
          "in": "body",
          "required": true,
          "description": "creating a new comment",
          "schema": {
            "$ref": "#definitions/commentRequest"
          }
        }],
        "responses": {
          "200": {
            "description": "successfully created a comment",
            "schema": {
              "$ref": "#definitions/postCommentOkResponse"
            }
          },
          "400": {
            "description": "Bad request sent during comment creation",
            "schema": {
              "$ref": "#definitions/postComment400Response"
            }
          }
        }
      }
    },


    "/characters/{movieId}?sortBy={name}&order={asc}&gender={female}": {
      "get": {
        "tags": ["characters"],
        "description": "Fetches All character for a movie based on specified parameters",
        "parameters": [{
          "name": "sortBy",
          "in": "query",
          "type": "string",
          "required": false,
          "description": "To sort characters by one of name, gender or height"
        },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "To order characters in ascending or descending order"
          },
          {
            "name": "gender",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "specifies the filter parameter. male or female"
          }],
        "responses": {
          "200": {
            "description": "Successfully fetched and manipulated character API from Swapi endpoint",
            "schema": {
              "$ref": "#definitions/characterResponseOk"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "characterResponseOk": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": true
        },
        "message": {
          "type": "string",
          "example": "characters retrieved"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Adi Gallia"
              },
              "height": {
                "type": "string",
                "example": "184"
              },
              "mass": {
                "type": "string",
                "example": "50"
              },
              "hair_oolor": {
                "type": "string",
                "example": "none"
              },
              "skin_color": {
                "type": "string",
                "example": "dark"
              },
              "eye_color": {
                "type": "string",
                "example": "blue"
              },
              "birth_year": {
                "type": "string",
                "example": "unknown"
              },
              "gender": {
                "type": "string",
                "example": "female"
              },
              "homeworld": {
                "type": "string",
                "example": "https://swapi.co/api/planets/9/"
              },
              "films": {
                "type": "array",
                "example": [
                  "https://swapi.co/api/films/4/",
                  "https://swapi.co/api/films/6/"
                ]
              },
              "species": {
                "type": "array",
                "example": [
                  "https://swapi.co/api/species/23/"
                ]
              },
              "vehicles": {
                "type": "array",
                "example": [
                ]
              },
              "starships": {
                "type": "array",
                "example": [
                ]
              },
              "created": {
                "type": "string",
                "example": "2014-12-20T10:29:11.661000Z"
              },
              "edited": {
                "type": "string",
                "example": "2014-12-20T21:17:50.432000Z"
              },
              "url": {
                "type": "string",
                "example": "https://swapi.co/api/people/55/"
              }
            }
          }
        }
      }
    },
    "commentRequest": {
      "properties": {
        "comment": {
          "type": "string",
          "example": "This is a movie comment for the third movie"
        },
        "movieId": {
          "type": "integer",
          "example": 5
        }
      }
    },
    "postCommentOkResponse": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": true
        },
        "message": {
          "type": "string",
          "example": "comment created successfully"
        },
        "data": {
          "type": "null",
          "example": null
        }
      }
    },
    "postComment400Response": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": false
        },
        "message": {
          "type": "string",
          "example": "Movie ID is invalid"
        },
        "data": {
          "type": "null",
          "example": null
        }
      }
    },
    
  }
}